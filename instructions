1- Deploy del portafolio a Githbu pages

para esto primero tenemos que ir a github y en nuestro perfil crear un nuevo repositiorio 'pagespeed-insights' por ejemplo

no cambiamos nada en las configuraciones y lo creamos, luego como vamos a usar nuestro proyecto que hicimos del curso responsive design 

vamos copiamos esa carpeta le cambiamos el nombre en este caso escogimos 'pagespeed-insights'

lo siguiente es entrar a esa carpeta por consola e niciar un repositorio nuevo ahi 

git init 

luego  git status


como vemos tenemos archivos que estan en untracked asi que hacemos add de todos

git add -A


ahora hay que hacer commit

git commit -m 'page speed base'

git  log y vemos que va bien

ahora tenemos que unirlo con ese repositorio que creamos en github hacer deploy, para esto vamos  a github donde dejamos el repo creado, vemos que las opciones https y ssh esten y que escogimos ssh 

copiamos el primer comando de esta opcion, y lo ejecutamos

…or push an existing repository from the command line

git remote add origin git@github.com:Evertcolombia/pagespeed-insights.git


//luego vamos a hacer push de master a ese repositorio

git push -u origin master

//listo volvemos a github recargamos donde estabamos y vemos nuestros archivos ahi

ahora gracias a que tenemos un inde.html en nuestros archivos, podemos hacer un  GITHUB PAGES

vamos settings  buscamos Github Pages, donde dice none le pasamos a que use nuestro branch master y con esrto nos crea un sitio web

recargamos  y volvemos a github pages y ahi vemos una ruta es la de nuestra pagina que nos creo github  porque hicimos deploy,  entramos al enlace

//por ultimo volvemos al repositorio en github y  hacemos en best -practice en en edit , pegamos ahi la url, para que la gente que visite nuestro repo pueda verlo en display para el usuario


2- Google PageSpeed Insights

para esta clase vamos a google pagespeed insights y copiamos ahi nuestra url para analizarla

y ahi vemos que luego del analisis nos muestra una serie de recomendaciones y guias para hacer estre trabajo de optimizacion



3-Eliminando bloqueos de visualización, fuentes


La primera optimización que vamos a realizar a nuestro sitio tiene que ver con eliminar cualquier carga que afecte al renderizado de nuestro sitio. Específicamente tiene que encontrarse libre el Above the fold, la primera parte visible para el usuario sin necesidad de hacer scroll.


en google pagespeed insights nos dice que algo bueno seria eliminar el css y el javascript de la mitad superior de la pagina,  este concepto es  el Above the fold, entonces en esa parte no deberiamos estar cargando archivos de css o js o cualquier cosa que bloquee re renderizado de nuestra pagina

esto sucede porque estamos insertando cosas como la hoja de estilos en el head, antes de que se cargue el contenido de nuestra pagina, igual el cdn a google fonts, entonces lo que ocurre es que haciendo esos request toma tiempo y luego puede continuar leyendo lo siguiente de nuestro sitio web

entonces no hagamos esos llamados a ese tipo de arvhios en el head,  usemos una solucion


vamos al codigo del proecto index.html y tomemos esos link y los llevamos hasta abajo del footer  los del css y las fuentes

ahora para volver  a hacer el puntaje de google pagessped insights, primero tenemos que hacer deploy de nuestro proyecto en github, y para esto primero tenemos que enviar otro commit y un push

git status

git add -A 

git commit -m 'render block'

git push origin master

ya con esto vamos a ver nuestro sitio we actualizado pero  ete toma unos segundos so keep the calm

para verificar el cambio podemos ir a la url y en el inspector podemos verificar que nuestros link bajaron abajo del footer

cuandoc vemos eso podemos ir a pagespeed insights y analizar de nuevo la pagina


ahora verifiquemos un efecto dentro de nuestro website en el isnpector, nos pnemos en network, y en la opcion online  le ponemos slow 3G y recargamos la pagina con ctrl + shift + r

vemos como es que se carga la pagina  y vemos que uestra pagina ahora se renderiza con el contenido visible y luego si carga la fuente y despues el css

ahora unos cambios prudentes que nos faltan pueden ser ponerle al h1 un max-width de 500% en el css, tambien cambiemos el tipo de fuente que carga por defecto antes que cargue la que traemos de googlefonts usemos la propiedad system-ui, para esto seleccionamos todos los llamados a sans-serif y los remplazamos por system-ui 

guardamos y mandemos eso a hacer deploy
git status
git add -A
git commit -m 'add system-ui'
git push origin master

ahora verifiquemos en la url de nuestro website viendo el inspector que al recargar tome los cambios, en este caso viendo que cambio el sans-serif


Algo que podemos hacer  particularmente con las fuentes cuando las cargo por medio de google es llamarlas de forma asincrona por medio de JS, pero esto lo podemos hacer despues

``<scriptsrc="https://ajax.googleapis.com/ajax/libs/webfont/1.6.26/webfont.js"></script>
  <script>
    WebFont.load({
      google: {
        families: ['nombreDeLaFuente:PesoDeLaFuente,PesoDeLaFuente2']
      }
    });
  </script>`````
Y al igual que como lo menciona @LeonidasEsteban se coloca después del footer y no antes. 